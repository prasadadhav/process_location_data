---
title: "Classifying points of interest"
format: html
---

# Load required libraries

```{r}
#| output: false

library(sf)
library(dplyr)
library(ggplot2)
library(ggspatial)
library(leaflet)
library(osmdata)
library(ggmap)
```

# Load Data

## Read the csv files
```{r}
# Read survey data and points of interest
survey_data <- read.csv("./data/Survey Test- dummy survey.csv", stringsAsFactors = FALSE)
poi_data <- read.csv("./data/Survey Test- Points_of_interest.csv", stringsAsFactors = FALSE)
```

## Convert WKT (well Known Text) format to sf geometries
```{r}
survey_sf <- st_as_sf(survey_data, wkt = "WKT", crs = 4326)
poi_sf <- st_as_sf(poi_data, wkt = "WKT", crs = 4326)
```

## Convert them into `sf` objects
Convert to sf objects assuming columns: lon (longitude) and lat (latitude)
```{r}
survey_sf <- st_transform(survey_sf, 32631)  # Adjust UTM zone based on location
poi_sf <- st_transform(poi_sf, 32631)
```

# Create Zones
```{r}
critical_zone <- st_buffer(poi_sf, 100)   # 0-50m buffer
alright_zone <- st_buffer(poi_sf, 250)   # 0-100m buffer
```

# Classify points
```{r}
survey_sf <- survey_sf %>%
  mutate(
    zone = case_when(
      lengths(st_intersects(survey_sf, critical_zone)) > 0 ~ "critical_zone",
      lengths(st_intersects(survey_sf, alright_zone)) > 0 ~ "alright_zone",
      TRUE ~ "no_effect_zone"
    )
  )
```

# Visualize the map

## Use ggmap 

plot
```{r}
# Plot with ggmap background
# Plot the map
```


## Use ggplot
```{r}
#| output: true

```

## use leaflet for interactive maps
```{r}
#| output: true

leaflet() %>%
  addTiles() %>%
  addPolygons(data = st_transform(critical_zone, 4326), fillColor = "red", opacity = 0.5, weight = 1, group = "Critical Zone") %>%
  addPolygons(data = st_transform(alright_zone, 4326), fillColor = "yellow", opacity = 0.5, weight = 1, group = "Alright Zone") %>%
  addCircleMarkers(data = st_transform(poi_sf, 4326), color = "blue", radius = 5, label = poi_sf$name, group = "POI") %>%
  addCircleMarkers(data = st_transform(survey_sf, 4326), color = "black", radius = 3, group = "Survey Points") %>%
  addLayersControl(overlayGroups = c("Critical Zone", "Alright Zone", "POI", "Survey Points"), options = layersControlOptions(collapsed = FALSE))
```


# Save the data
```{r}
write.csv(st_drop_geometry(survey_sf), 
    "./data/classified_survey_data.csv", 
    row.names = FALSE
    )
```
