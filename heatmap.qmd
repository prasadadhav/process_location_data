---
title: "Heat map based on the 'collected' data "
format: html
---

# Load required libraries

```{r}
#| output: false

library(sf)
library(dplyr)
library(leaflet)
library(leaflet.extras)
library(htmlwidgets)
library(ggplot2)
library(viridis)
library(sp)
library(raster)
library(terra)
library(spatstat.geom)
library(spatstat.explore)
library(htmlwidgets)
```

# Load Data

## Read the csv files
```{r}
# Read survey data and points of interest
survey_data <- read.csv("./data/Survey Test- dummy survey.csv", stringsAsFactors = FALSE)
poi_data <- read.csv("./data/Survey Test- Points_of_interest.csv", stringsAsFactors = FALSE)
```

## Convert WKT (well Known Text) format to sf geometries
```{r}
survey_sf <- st_as_sf(survey_data, wkt = "WKT", crs = 4326)
poi_sf <- st_as_sf(poi_data, wkt = "WKT", crs = 4326)
```

## Convert them into `sf` objects
Convert to sf objects assuming columns: lon (longitude) and lat (latitude)
```{r}
survey_sf <- st_transform(survey_sf, 32631)  # Adjust UTM zone based on location
poi_sf <- st_transform(poi_sf, 32631)
```

# Create Zones
```{r}
critical_zone <- st_buffer(poi_sf, 100)   # 0-50m buffer
moderate_zone <- st_buffer(poi_sf, 250)   # 0-100m buffer
```

# Classify points
```{r}
survey_sf <- survey_sf %>%
  mutate(
    zone = case_when(
      lengths(st_intersects(survey_sf, critical_zone)) > 0 ~ "critical_zone",
      lengths(st_intersects(survey_sf, moderate_zone)) > 0 ~ "moderate_zone",
      TRUE ~ "no_effect_zone"
    )
  )
```

# Visualize the map
Here the collected ("simulated") survey points are shown in grey, the points of interests i.e the beachs and the drinking water intake are show in blue.

We are declaring three zones as follows:
- `0 to 100m` for "Critical Zone"
- `100 to 250m` for "Moderate Zone"

# Simple Heat map

```{r}
#| output: true
#| code-fold: true
#| code-summary: "Show the code"
# Define initial map center and zoom
initial_center <- c(49.89987576569639, 5.882080084411428)  # Latitude and Longitude for initial map center
initial_zoom <- 13.25

leaflet() %>%
  addTiles() %>%
  addPolygons(data = st_transform(critical_zone, 4326), fillColor = "red", opacity = 0.5, weight = 1, group = "Critical Zone") %>%
  addPolygons(data = st_transform(moderate_zone, 4326), fillColor = "yellow", opacity = 0.5, weight = 1, group = "Moderate Zone") %>%
  addCircleMarkers(data = st_transform(poi_sf, 4326), color = "blue", radius = 5, label = poi_sf$name, group = "POI") %>%
  addCircleMarkers(data = st_transform(survey_sf, 4326), color = "black", radius = 3, group = "Survey Points") %>%
  addHeatmap(data = st_transform(survey_sf, 4326), 
             intensity = 10,  # Adjust intensity if you have a weight column
             blur = 35, 
             max = 1, 
             radius = 30, 
             group = "Heatmap") %>%
  addLayersControl(
    overlayGroups = c("Critical Zone", "Moderate Zone", "POI", "Survey Points", "Heatmap"), 
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  setView(lng = initial_center[2], lat = initial_center[1], zoom = initial_zoom) %>%
  addResetMapButton()  %>%
  htmlwidgets::onRender("
    function(el, x) {
      var map = this;
      map.options.zoomSnap = 0.01;  // Set the zoomSnap value
    }
  ")
```

# Edited Heat map
